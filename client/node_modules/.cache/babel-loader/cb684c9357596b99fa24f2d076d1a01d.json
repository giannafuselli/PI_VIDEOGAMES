{"ast":null,"code":"import axios from 'axios';\nexport const GET_ALL_VGAMES = \"GET_ALL_VGAMES\";\nexport const GET_DETAIL = \"GET_DETAIL\";\nexport const GET_GENRES = \"GET_GENRES\";\nexport const POST_VGAME = \"POST_VGAME\";\nexport const PAGINADO = \"PAGINADO\";\nexport const SEARCH_NAME = \"SEARCH_NAME\";\nexport const DELETE_VGAME = \"DELETE_VGAME\";\nexport const UPDATE_VGAME = \"UPDATE_VGAME\";\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\nexport const FILTER_BANK = \"FILTER_BANK\";\nexport const REMOVE_FILTER = \"REMOVE_FILTER\";\nexport const FILTER_APPLY = \"FILTER_APPLY\";\nexport const REMOVE_ALL_FILTER = \"REMOVE_ALL_FILTER\";\nexport const ERRORS = \"ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const NOT_RELOAD = \"NOT_RELOAD\";\nexport function getAllVGames() {\n  return async function (dispatch) {\n    try {\n      const response = (await axios.get(\"http://localhost:3001/videogames\")).data;\n      dispatch({\n        type: GET_ALL_VGAMES,\n        payload: response\n      });\n    } catch (error) {\n      throw Error(error.message);\n    }\n  };\n}\n;\n\n// export function paginado(order){\n//     return async function(dispatch){\n//      dispatch({\n//          type: PAGINADO,\n//          payload: order\n//      })\n//     }\n//  };\n\nexport function paginado(value) {\n  return async function (dispatch) {\n    dispatch({\n      type: PAGINADO,\n      payload: value\n    });\n  };\n}\n;\nexport function getDetail(id) {\n  return async function (dispatch) {\n    try {\n      const response = (await axios.get(\"http://localhost:3001/videogames/\" + id)).data;\n      dispatch({\n        type: GET_DETAIL,\n        payload: response\n      });\n    } catch (error) {\n      throw Error(error.message);\n    }\n  };\n}\n;\nexport function clearDetail() {\n  return async function (dispatch) {\n    dispatch({\n      type: CLEAR_DETAIL\n    });\n  };\n}\n;\nexport function getGenres() {\n  return async function (dispatch) {\n    try {\n      const response = (await axios.get(\"http://localhost:3001/genres\")).data;\n      dispatch({\n        type: GET_GENRES,\n        payload: response\n      });\n    } catch (error) {\n      throw Error(error.message);\n    }\n  };\n}\n;\nexport function postVgame(payload) {\n  return async function (dispatch) {\n    try {\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const response = await axios.post(\"http://localhost:3001/videogames\", payload, {\n        headers\n      });\n      dispatch({\n        type: POST_VGAME,\n        payload: response.data\n      });\n      return false;\n    } catch (error) {\n      dispatch({\n        type: ERRORS,\n        payload: {\n          type: \"postVideogame\",\n          error: error.response.data\n        }\n      });\n      return error;\n    }\n  };\n}\n;\nexport function setNewErrors(obj) {\n  return async function (dispatch) {\n    dispatch({\n      type: ERRORS,\n      payload: obj\n    });\n  };\n}\n;\nexport function clearErrors() {\n  return async function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n}\n;\nexport function notReload(boolean) {\n  return async function (dispatch) {\n    dispatch({\n      type: NOT_RELOAD,\n      payload: boolean\n    });\n  };\n}\n;\nexport function filterBank(filterObj) {\n  return async function (dispatch) {\n    dispatch({\n      type: FILTER_BANK,\n      payload: filterObj\n    });\n  };\n}\n;\nexport function removeFilter(value) {\n  return async function (dispatch) {\n    dispatch({\n      type: REMOVE_FILTER,\n      payload: value\n    });\n  };\n}\n;\nexport function filterApply() {\n  return async function (dispatch) {\n    dispatch({\n      type: FILTER_APPLY\n    });\n  };\n}\n;\nexport function removeAllFilter() {\n  return async function (dispatch) {\n    dispatch({\n      type: REMOVE_ALL_FILTER\n    });\n  };\n}\n;\nexport function searchName(name) {\n  return async function (dispatch) {\n    const response = (await axios.get(\"http://localhost:3001/videogames?name=\" + name)).data;\n    dispatch({\n      type: SEARCH_NAME,\n      payload: response\n    });\n  };\n}\n;\nexport function deleteVgame(id) {\n  return async function (dispatch) {\n    try {\n      const response = await axios.delete(\"http://localhost:3001/delete/\" + id);\n      dispatch({\n        type: DELETE_VGAME,\n        payload: response.data\n      });\n    } catch (error) {\n      throw Error(error.message);\n    }\n  };\n}\n;\nexport function updateVgame(payload, id) {\n  return async function (dispatch) {\n    try {\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      const response = await axios.patch(`http://localhost:3001/update/${id}`, payload, {\n        headers\n      });\n      dispatch({\n        type: UPDATE_VGAME,\n        payload: response.data\n      });\n      return false;\n    } catch (error) {\n      dispatch({\n        type: ERRORS,\n        payload: {\n          type: \"updateVideogame\",\n          error: error.response.data\n        }\n      });\n      return error;\n    }\n  };\n}\n;","map":{"version":3,"names":["axios","GET_ALL_VGAMES","GET_DETAIL","GET_GENRES","POST_VGAME","PAGINADO","SEARCH_NAME","DELETE_VGAME","UPDATE_VGAME","CLEAR_DETAIL","FILTER_BANK","REMOVE_FILTER","FILTER_APPLY","REMOVE_ALL_FILTER","ERRORS","CLEAR_ERRORS","NOT_RELOAD","getAllVGames","dispatch","response","get","data","type","payload","error","Error","message","paginado","value","getDetail","id","clearDetail","getGenres","postVgame","headers","post","setNewErrors","obj","clearErrors","notReload","boolean","filterBank","filterObj","removeFilter","filterApply","removeAllFilter","searchName","name","deleteVgame","delete","updateVgame","patch"],"sources":["C:/Users/fusel/Videojuegos-PI/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_ALL_VGAMES = \"GET_ALL_VGAMES\";\r\nexport const GET_DETAIL = \"GET_DETAIL\";\r\nexport const GET_GENRES = \"GET_GENRES\";\r\nexport const POST_VGAME = \"POST_VGAME\";\r\nexport const PAGINADO = \"PAGINADO\";\r\nexport const SEARCH_NAME = \"SEARCH_NAME\";\r\nexport const DELETE_VGAME = \"DELETE_VGAME\";\r\nexport const UPDATE_VGAME = \"UPDATE_VGAME\";\r\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\r\nexport const FILTER_BANK = \"FILTER_BANK\";\r\nexport const REMOVE_FILTER = \"REMOVE_FILTER\";\r\nexport const FILTER_APPLY = \"FILTER_APPLY\";\r\nexport const REMOVE_ALL_FILTER = \"REMOVE_ALL_FILTER\";\r\nexport const ERRORS = \"ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const NOT_RELOAD = \"NOT_RELOAD\";\r\n\r\n\r\nexport function getAllVGames(){\r\n return async function(dispatch){\r\n    try {\r\n        const response = (await axios.get(\"http://localhost:3001/videogames\")).data\r\n        dispatch({\r\n            type: GET_ALL_VGAMES,\r\n            payload: response\r\n        })\r\n    } catch (error) {\r\n        throw Error(error.message)\r\n    }\r\n }\r\n};\r\n\r\n\r\n// export function paginado(order){\r\n//     return async function(dispatch){\r\n//      dispatch({\r\n//          type: PAGINADO,\r\n//          payload: order\r\n//      })\r\n//     }\r\n//  };\r\n\r\nexport function paginado(value){\r\n    return async function(dispatch){\r\n     dispatch({\r\n         type: PAGINADO,\r\n         payload: value\r\n     })\r\n    }\r\n };\r\n\r\n\r\nexport function getDetail(id){\r\n    return async function(dispatch){\r\n        try {\r\n            const response = (await axios.get(\"http://localhost:3001/videogames/\" + id)).data\r\n            dispatch({\r\n                type: GET_DETAIL,\r\n                payload: response\r\n            })\r\n        } catch (error) {\r\n            throw Error(error.message)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport function clearDetail(){\r\n    return async function(dispatch){\r\n     dispatch({\r\n        type: CLEAR_DETAIL,\r\n     })\r\n    }\r\n};\r\n\r\n\r\nexport function getGenres(){\r\n    return async function(dispatch){\r\n        try {\r\n            const response = (await axios.get(\"http://localhost:3001/genres\")).data\r\n            dispatch({\r\n                type: GET_GENRES,\r\n                payload: response\r\n            })\r\n        } catch (error) {\r\n            throw Error(error.message)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport function postVgame(payload){\r\n    return async function(dispatch){\r\n        try {\r\n            const headers={'Content-Type':'application/json'}\r\n            const response = await axios.post(\"http://localhost:3001/videogames\", payload, {headers})\r\n            dispatch({\r\n                type: POST_VGAME,\r\n                payload: response.data\r\n            })\r\n            return false\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERRORS,\r\n                payload: {type:\"postVideogame\",error:error.response.data}\r\n            })\r\n            return error\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport function setNewErrors(obj){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: ERRORS,\r\n            payload: obj\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function clearErrors(){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: CLEAR_ERRORS\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function notReload(boolean){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: NOT_RELOAD,\r\n            payload: boolean\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function filterBank(filterObj){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: FILTER_BANK,\r\n            payload: filterObj\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function removeFilter(value){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: REMOVE_FILTER,\r\n            payload: value\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function filterApply(){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: FILTER_APPLY\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function removeAllFilter(){\r\n    return async function(dispatch){\r\n        dispatch({\r\n            type: REMOVE_ALL_FILTER\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport function searchName(name){\r\n    return async function(dispatch){\r\n        const response = (await axios.get(\"http://localhost:3001/videogames?name=\" + name)).data\r\n        dispatch({\r\n            type: SEARCH_NAME,\r\n            payload: response\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport function deleteVgame(id){\r\n    return async function(dispatch){\r\n        try {\r\n            const response = await axios.delete(\"http://localhost:3001/delete/\" + id)\r\n            dispatch({\r\n                type: DELETE_VGAME,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            throw Error(error.message)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport function updateVgame(payload, id){\r\n    return async function(dispatch){\r\n        try {\r\n            const headers={'Content-Type':'application/json'}\r\n            const response = await axios.patch(`http://localhost:3001/update/${id}`, payload, {headers})\r\n            dispatch({\r\n                type: UPDATE_VGAME,\r\n                payload: response.data\r\n            })\r\n            return false\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERRORS,\r\n                payload: {type:\"updateVideogame\", error:error.response.data}\r\n            })\r\n            return error\r\n        }\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}